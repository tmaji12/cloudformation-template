AWSTemplateFormatVersion: '2010-09-09'

Description: 'NEW VPC CREATION WITH EC2 SERVERS ALONG WITH ALB AND S3 BUCKET'

Mappings:
  AmiIdMap:
    AmazonLinux:
      "AMI": "AWS::SSM::Parameter::Value/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2"
    Windows2012:
      "AMI": "AWS::SSM::Parameter::Value/aws/service/ami-windows-latest/Windows_Server-2012-R2-English-STIG-Core"
    Windows2016:
      "AMI": "AWS::SSM::Parameter::Value/aws/service/ami-windows-latest/Windows_Server-2016-English-Full-Base"

Parameters:                                   # Parameter Block
  ParaCidrBlock:                              # VPC CIDR
    Type: String
    Default : 10.0.0.0/16 
    ConstraintDescription: Please enter VPC CIDR

  ParaPublicSubnet1CIDR:                      # Public Subnet CIDR
    Description: Enter the IP range (CIDR notation)  for the public subnet in AZ A
    Type: String
    Default: 10.0.1.0/24
    ConstraintDescription: Please enter Subnet CIDR

  ParaPublicSubnet2CIDR:                      # Public Subnet CIDR
    Description: Enter the IP range (CIDR notation)  for the public subnet in AZ B
    Type: String
    Default: 10.0.2.0/24
    ConstraintDescription: Please enter Subnet CIDR

  ParaPrivateSubnet1CIDR:                     # Private Subnet CIDR
    Description: Enter the IP range (CIDR notation)  for the private subnet in AZ A
    Type: String
    Default: 10.0.100.0/24
    ConstraintDescription: Please enter Subnet CIDR

  ParaPrivateSubnet2CIDR:                     # Private Subnet CIDR
    Description: Enter the IP range (CIDR notation)  for the private subnet in AZ B
    Type: String
    Default: 10.0.101.0/24
    ConstraintDescription: Please enter Subnet CIDR

  InstanceType:                               # Choose Instance Type
    Description: WebServer EC2 instance type
    Type: String
    Default: t2.micro
    AllowedValues: [c3.2xlarge , c3.4xlarge , c3.8xlarge , c3.large , c3.xlarge , c4.2xlarge , c4.4xlarge , c4.8xlarge , c4.large , c4.xlarge , c5.12xlarge , c5.18xlarge , c5.24xlarge , c5.2xlarge , c5.4xlarge , c5.9xlarge , c5.large , c5.metal , c5.xlarge , c5a.12xlarge , c5a.16xlarge , c5a.24xlarge , c5a.2xlarge , c5a.4xlarge , c5a.8xlarge , c5a.large , c5a.xlarge , c5ad.12xlarge , c5ad.16xlarge , c5ad.24xlarge , c5ad.2xlarge , c5ad.4xlarge , c5ad.8xlarge , c5ad.large , c5ad.xlarge , c5d.12xlarge , c5d.18xlarge , c5d.24xlarge , c5d.2xlarge , c5d.4xlarge , c5d.9xlarge , c5d.large , c5d.metal , c5d.xlarge , c5n.18xlarge , c5n.2xlarge , c5n.4xlarge , c5n.9xlarge , c5n.large , c5n.metal , c5n.xlarge , c6g.12xlarge , c6g.16xlarge , c6g.2xlarge , c6g.4xlarge , c6g.8xlarge , c6g.large , c6g.medium , c6g.metal , c6g.xlarge , c6gd.12xlarge , c6gd.16xlarge , c6gd.2xlarge , c6gd.4xlarge , c6gd.8xlarge , c6gd.large , c6gd.medium , c6gd.metal , c6gd.xlarge , c6gn.12xlarge , c6gn.16xlarge , c6gn.2xlarge , c6gn.4xlarge , c6gn.8xlarge , c6gn.large , c6gn.medium , c6gn.xlarge , c6i.12xlarge , c6i.16xlarge , c6i.24xlarge , c6i.2xlarge , c6i.32xlarge , c6i.4xlarge , c6i.8xlarge , c6i.large , c6i.metal , c6i.xlarge , cc1.4xlarge , cc2.8xlarge , cg1.4xlarge , cr1.8xlarge , d2.2xlarge , d2.4xlarge , d2.8xlarge , d2.xlarge , d3.2xlarge , d3.4xlarge , d3.8xlarge , d3.xlarge , d3en.12xlarge , d3en.2xlarge , d3en.4xlarge , d3en.6xlarge , d3en.8xlarge , d3en.xlarge , dl1.24xlarge , f1.16xlarge , f1.2xlarge , f1.4xlarge , g2.2xlarge , g2.8xlarge , g3.16xlarge , g3.4xlarge , g3.8xlarge , g3s.xlarge , g4ad.16xlarge , g4ad.2xlarge , g4ad.4xlarge , g4ad.8xlarge , g4ad.xlarge , g4dn.12xlarge , g4dn.16xlarge , g4dn.2xlarge , g4dn.4xlarge , g4dn.8xlarge , g4dn.metal , g4dn.xlarge , g5.12xlarge , g5.16xlarge , g5.24xlarge , g5.2xlarge , g5.48xlarge , g5.4xlarge , g5.8xlarge , g5.xlarge , g5g.16xlarge , g5g.2xlarge , g5g.4xlarge , g5g.8xlarge , g5g.metal , g5g.xlarge , h1.16xlarge , h1.2xlarge , h1.4xlarge , h1.8xlarge , hi1.4xlarge , hpc6a.48xlarge , hs1.8xlarge , i2.2xlarge , i2.4xlarge , i2.8xlarge , i2.xlarge , i3.16xlarge , i3.2xlarge , i3.4xlarge , i3.8xlarge , i3.large , i3.metal , i3.xlarge , i3en.12xlarge , i3en.24xlarge , i3en.2xlarge , i3en.3xlarge , i3en.6xlarge , i3en.large , i3en.metal , i3en.xlarge , im4gn.16xlarge , im4gn.2xlarge , im4gn.4xlarge , im4gn.8xlarge , im4gn.large , im4gn.xlarge , inf1.24xlarge , inf1.2xlarge , inf1.6xlarge , inf1.xlarge , is4gen.2xlarge , is4gen.4xlarge , is4gen.8xlarge , is4gen.large , is4gen.medium , is4gen.xlarge , m1.large , m1.medium , m1.small , m1.xlarge , m2.2xlarge , m2.4xlarge , m2.xlarge , m3.2xlarge , m3.large , m3.medium , m3.xlarge , m4.10xlarge , m4.16xlarge , m4.2xlarge , m4.4xlarge , m4.large , m4.xlarge , m5.12xlarge , m5.16xlarge , m5.24xlarge , m5.2xlarge , m5.4xlarge , m5.8xlarge , m5.large , m5.metal , m5.xlarge , m5a.12xlarge , m5a.16xlarge , m5a.24xlarge , m5a.2xlarge , m5a.4xlarge , m5a.8xlarge , m5a.large , m5a.xlarge , m5ad.12xlarge , m5ad.16xlarge , m5ad.24xlarge , m5ad.2xlarge , m5ad.4xlarge , m5ad.8xlarge , m5ad.large , m5ad.xlarge , m5d.12xlarge , m5d.16xlarge , m5d.24xlarge , m5d.2xlarge , m5d.4xlarge , m5d.8xlarge , m5d.large , m5d.metal , m5d.xlarge , m5dn.12xlarge , m5dn.16xlarge , m5dn.24xlarge , m5dn.2xlarge , m5dn.4xlarge , m5dn.8xlarge , m5dn.large , m5dn.metal , m5dn.xlarge , m5n.12xlarge , m5n.16xlarge , m5n.24xlarge , m5n.2xlarge , m5n.4xlarge , m5n.8xlarge , m5n.large , m5n.metal , m5n.xlarge , m5zn.12xlarge , m5zn.2xlarge , m5zn.3xlarge , m5zn.6xlarge , m5zn.large , m5zn.metal , m5zn.xlarge , m6a.12xlarge , m6a.16xlarge , m6a.24xlarge , m6a.2xlarge , m6a.32xlarge , m6a.48xlarge , m6a.4xlarge , m6a.8xlarge , m6a.large , m6a.xlarge , m6g.12xlarge , m6g.16xlarge , m6g.2xlarge , m6g.4xlarge , m6g.8xlarge , m6g.large , m6g.medium , m6g.metal , m6g.xlarge , m6gd.12xlarge , m6gd.16xlarge , m6gd.2xlarge , m6gd.4xlarge , m6gd.8xlarge , m6gd.large , m6gd.medium , m6gd.metal , m6gd.xlarge , m6i.12xlarge , m6i.16xlarge , m6i.24xlarge , m6i.2xlarge , m6i.32xlarge , m6i.4xlarge , m6i.8xlarge , m6i.large , m6i.metal , m6i.xlarge , mac1.metal , p2.16xlarge , p2.8xlarge , p2.xlarge , p3.16xlarge , p3.2xlarge , p3.8xlarge , p3dn.24xlarge , p4d.24xlarge , r3.2xlarge , r3.4xlarge , r3.8xlarge , r3.large , r3.xlarge , r4.16xlarge , r4.2xlarge , r4.4xlarge , r4.8xlarge , r4.large , r4.xlarge , r5.12xlarge , r5.16xlarge , r5.24xlarge , r5.2xlarge , r5.4xlarge , r5.8xlarge , r5.large , r5.metal , r5.xlarge , r5a.12xlarge , r5a.16xlarge , r5a.24xlarge , r5a.2xlarge , r5a.4xlarge , r5a.8xlarge , r5a.large , r5a.xlarge , r5ad.12xlarge , r5ad.16xlarge , r5ad.24xlarge , r5ad.2xlarge , r5ad.4xlarge , r5ad.8xlarge , r5ad.large , r5ad.xlarge , r5b.12xlarge , r5b.16xlarge , r5b.24xlarge , r5b.2xlarge , r5b.4xlarge , r5b.8xlarge , r5b.large , r5b.metal , r5b.xlarge , r5d.12xlarge , r5d.16xlarge , r5d.24xlarge , r5d.2xlarge , r5d.4xlarge , r5d.8xlarge , r5d.large , r5d.metal , r5d.xlarge , r5dn.12xlarge , r5dn.16xlarge , r5dn.24xlarge , r5dn.2xlarge , r5dn.4xlarge , r5dn.8xlarge , r5dn.large , r5dn.metal , r5dn.xlarge , r5n.12xlarge , r5n.16xlarge , r5n.24xlarge , r5n.2xlarge , r5n.4xlarge , r5n.8xlarge , r5n.large , r5n.metal , r5n.xlarge , r6g.12xlarge , r6g.16xlarge , r6g.2xlarge , r6g.4xlarge , r6g.8xlarge , r6g.large , r6g.medium , r6g.metal , r6g.xlarge , r6gd.12xlarge , r6gd.16xlarge , r6gd.2xlarge , r6gd.4xlarge , r6gd.8xlarge , r6gd.large , r6gd.medium , r6gd.metal , r6gd.xlarge , r6i.12xlarge , r6i.16xlarge , r6i.24xlarge , r6i.2xlarge , r6i.32xlarge , r6i.4xlarge , r6i.8xlarge , r6i.large , r6i.metal , r6i.xlarge , t1.micro , t2.2xlarge , t2.large , t2.medium , t2.micro , t2.nano , t2.small , t2.xlarge , t3.2xlarge , t3.large , t3.medium , t3.micro , t3.nano , t3.small , t3.xlarge , t3a.2xlarge , t3a.large , t3a.medium , t3a.micro , t3a.nano , t3a.small , t3a.xlarge , t4g.2xlarge , t4g.large , t4g.medium , t4g.micro , t4g.nano , t4g.small , t4g.xlarge , u-12tb1.112xlarge , u-12tb1.metal , u-18tb1.metal , u-24tb1.metal , u-6tb1.112xlarge , u-6tb1.56xlarge , u-6tb1.metal , u-9tb1.112xlarge , u-9tb1.metal , vt1.24xlarge , vt1.3xlarge , vt1.6xlarge , x1.16xlarge , x1.32xlarge , x1e.16xlarge , x1e.2xlarge , x1e.32xlarge , x1e.4xlarge , x1e.8xlarge , x1e.xlarge , x2gd.12xlarge , x2gd.16xlarge , x2gd.2xlarge , x2gd.4xlarge , x2gd.8xlarge , x2gd.large , x2gd.medium , x2gd.metal , x2gd.xlarge , z1d.12xlarge , z1d.2xlarge , z1d.3xlarge , z1d.6xlarge , z1d.large , z1d.metal , z1d.xlarge]
    ConstraintDescription: must be a valid EC2 instance type.

  KeyName:                                    # Choose KeyPair
    Description: Name of an existing EC2 KeyPair to enable SSH access to the instance
    Type: AWS::EC2::KeyPair::KeyName
    ConstraintDescription: must be the name of an existing EC2 KeyPair.

  SSHLocation:                                # SSH Location
    Description: The IP address range that can be used to SSH to the EC2 instances
    Type: String
    MinLength: 9
    MaxLength: 18
    Default: 0.0.0.0/0
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})
    ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x.  

  #LatestAmiId:
  #  Type: 'AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>'
  #  AllowedValues: ["/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2", "/aws/service/ami-windows-latest/Windows_Server-2012-R2-English-STIG-Core"]
  #  #Default: '/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2'
  #  #AllowedValues: ['/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2', '/aws/service/ami-windows-latest/Windows_Server-2012-R2-English-STIG-Core' , '/aws/service/ami-windows-latest/Windows_Server-2016-English-Full-Base', '/aws/service/ami-amazon-linux-latest/amzn-ami-hvm-x86_64-ebs']
  #  ConstraintDescription: Choose an AMI for EC2

  LatestAmiId:
    Type: String
    Default: AmazonLinux
    AllowedValues: [AmazonLinux, Windows2012, Windows2016]
    ConstraintDescription: Choose an AMI for EC2


Resources:                                    # Resource Block
  VPC:                                        # VPC Creation
    Type: AWS::EC2::VPC
    Description: VPC CREATION
    Properties:
      CidrBlock: !Ref ParaCidrBlock
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: !Join ['', [!Ref "AWS::StackName", "-VPC" ]]
  
  InternetGateway:                            # IGW Creation
    Type: AWS::EC2::InternetGateway
    DependsOn: VPC
    Properties:
      Tags:
        - Key: Name
          Value:  !Sub ${AWS::StackName}-IGW

  AttachGateway:                              # IGW VPC attachment
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway

  NATGateway:                                 # NAT Gateway Creation
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt ElasticIPAddress.AllocationId
      SubnetId: !Ref PublicSubnetA
      Tags:
        - Key: Name
          Value:  !Sub ${AWS::StackName}-NAT

  ElasticIPAddress:                           # EIP Allotment
    Type: AWS::EC2::EIP
    Properties:
      Domain: VPC
      Tags:
        - Key: Name
          Value:  !Sub ${AWS::StackName}-NAT-EIP
  
  PublicSubnetA:                              # Public Subnet Creation
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref ParaPublicSubnet1CIDR
      MapPublicIpOnLaunch: true 
      AvailabilityZone: !Select [ 0, !GetAZs ]
      Tags:
        - Key: Name
          Value: !Sub ${AWS::StackName}-Public-A

  PublicSubnetB:                              # Public Subnet Creation
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref ParaPublicSubnet2CIDR
      MapPublicIpOnLaunch: true 
      AvailabilityZone: !Select [ 1, !GetAZs ]
      Tags:
        - Key: Name
          Value: !Sub ${AWS::StackName}-Public-A

  PrivateSubnetA:                             # Private Subnet Creation
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref ParaPrivateSubnet1CIDR
      AvailabilityZone: !Select [ 0, !GetAZs ]    # Get the first AZ in the list 
      Tags:
        - Key: Name
          Value: !Sub ${AWS::StackName}-Private-A

  PrivateSubnetB:                             # Private Subnet Creation
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref ParaPrivateSubnet2CIDR
      AvailabilityZone: !Select [ 1, !GetAZs ]    # Get the second AZ in the list 
      Tags:
        - Key: Name
          Value: !Sub ${AWS::StackName}-Private-B

  PublicRouteTable:                           # Private RouteTable Creation
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value:  !Sub ${AWS::StackName}-Public-RouteTable

  PublicRoute1:                               # Public route table has direct routing to IGW:
    Type: AWS::EC2::Route
    DependsOn: AttachGateway
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  PrivateRouteTable:                          # Private RouteTable Creation
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value:  !Sub ${AWS::StackName}-Private-RouteTable
  
  PrivateRoute1:                              # Private route table can access web via NAT
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PrivateRouteTable
      DestinationCidrBlock: 0.0.0.0/0         # Route traffic through the NAT Gateway:
      NatGatewayId: !Ref NATGateway
  
  PublicSubnetARouteTableAssociation:         # SubnetAssociation
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnetA
      RouteTableId: !Ref PublicRouteTable
  
  PublicSubnetBRouteTableAssociation:         # SubnetAssociation
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnetB
      RouteTableId: !Ref PublicRouteTable
  
  PrivateSubnetARouteTableAssociation:        # SubnetAssociation
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnetA
      RouteTableId: !Ref PrivateRouteTable

  PrivateSubnetBRouteTableAssociation:        # SubnetAssociation
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnetB
      RouteTableId: !Ref PrivateRouteTable

  S3FullPolicies:                             # Managed Policy S3 full access
    Type: 'AWS::IAM::ManagedPolicy'
    Properties:
      ManagedPolicyName: !Sub ${AWS::StackName}-S3-Full_access
      Description: Customer managed policy for read only access to EC2 instance
      Path: '/'
      PolicyDocument: 
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Action: 's3:*'
            Resource: !Join 
              - '' 
              - - 'arn:aws:s3:::' 
                - !Ref S3Bucket 
                - /*  # Specific S3 ARN

  IAMRole:                                    # IAM Role for EC2
    Type: AWS::IAM::Role
    Properties: 
      RoleName: SSM_Role_For_EC2
      Description: SSM role for EC2 Servers
      AssumeRolePolicyDocument: 
        Statement:
          - Effect: Allow
            Principal:
              Service: [ec2.amazonaws.com]
            Action: ['sts:AssumeRole']
      Path: /
      ManagedPolicyArns: 
        - arn:aws:iam::aws:policy/service-role/AmazonEC2RoleforSSM
        - !Ref S3FullPolicies
      MaxSessionDuration: 3600

  InstanceProfile:                            # Attaching IAM Role to EC2
    Type: AWS::IAM::InstanceProfile
    Properties: 
      InstanceProfileName: demo-ec2-instance-profile
      Path: /
      Roles: 
       - !Ref IAMRole  

  EC2Instance1:                               # New EC2 Instance
    Type: AWS::EC2::Instance
    Properties:
      ImageId: !FindInMap [AmiIdMap, !Ref "LatestAmiId", AMI]
      #ImageId: !Ref Ami
      InstanceType: !Ref InstanceType
      SubnetId: !Ref PublicSubnetB
      SecurityGroupIds: 
        - !Ref Ec2SecurityGroup
      KeyName: !Ref KeyName
      Tags:
       - Key: Name
         Value: !Sub ${AWS::StackName}-EC2-B
      IamInstanceProfile: !Ref InstanceProfile
      UserData:
        Fn::Base64: !Sub |
            #!/bin/bash
            yum install httpd -y
            service httpd start  
            echo "<html><body><h1>This message is provided to you by Region ${AWS::Region} and EC2-B <h1></body></html>" > /var/www/html/index.html

  EC2Instance2:                               # New EC2 Instance
    Type: AWS::EC2::Instance
    Properties:
      ImageId: !FindInMap [AmiIdMap, !Ref "LatestAmiId", AMI]
      #ImageId: !Ref Ami
      SubnetId: !Ref PublicSubnetA
      InstanceType: !Ref InstanceType
      BlockDeviceMappings:
        - DeviceName: "/dev/xvda"
          Ebs:
            VolumeSize: 10
      KeyName: !Ref KeyName
      SecurityGroupIds:
        - !Ref Ec2SecurityGroup
      Tags:
       - Key: Name
         Value: !Sub ${AWS::StackName}-EC2-A
      IamInstanceProfile: !Ref InstanceProfile
      UserData:
        Fn::Base64: !Sub |
            #!/bin/bash
            yum install httpd -y
            service httpd start  
            echo "<html><body><h1>This message is provided to you by Region ${AWS::Region} And EC2-A <h1></body></html>" > /var/www/html/index.html

  NewVolume:                                  # New EBS Volume
    Type: AWS::EC2::Volume
    DeletionPolicy: Snapshot
    Properties:
      AvailabilityZone: !GetAtt EC2Instance1.AvailabilityZone
      Size: 2
      VolumeType: gp2
      Tags:
       - Key: Name
         Value: !Sub ${AWS::StackName}-Volume-EC2-A

  MountPoint:                                 # Attaching EBS Volume
    Type: AWS::EC2::VolumeAttachment
    Properties:
      InstanceId: !Ref EC2Instance1
      VolumeId: !Ref NewVolume
      Device: /dev/sdh

  ALBSecurityGroup:                           # SG for ALB
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: "Allow HTTP/HTTPS and SSH inbound and outbound traffic"
      VpcId: !Ref VPC
      Tags:
       - Key: Name
         Value: !Sub ${AWS::StackName}-ALB_SG
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0

  Ec2SecurityGroup:                           # SG for EC2
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: "Allow HTTP/HTTPS and SSH inbound and outbound traffic"
      VpcId: !Ref VPC
      Tags:
       - Key: Name
         Value: !Sub ${AWS::StackName}-SG
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: !Ref 'SSHLocation'
          
  LoadBalancer:                               # Creating Load Balancer
    Type: 'AWS::ElasticLoadBalancingV2::LoadBalancer'
    DependsOn: EC2Instance1
    Properties:
      LoadBalancerAttributes:
        - Key: 'deletion_protection.enabled'
          Value: False
        - Key: 'access_logs.s3.enabled'
          Value: False
      Name: !Sub  '${AWS::StackName}-ALB'
      Scheme: 'internet-facing'
      Subnets: 
        - !Ref 'PublicSubnetA'
        - !Ref 'PublicSubnetB'
      SecurityGroups:
        - !Ref 'ALBSecurityGroup'

  LoadBalancerListenerHTTP:                   # Creating Load Balancer Listner
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
        LoadBalancerArn: !Ref LoadBalancer
        Port: 80
        Protocol: HTTP
        DefaultActions:
            - Type: forward
              TargetGroupArn: !Ref TargetGroup

  TargetGroup:                                # Creating Target Group
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
        Name: !Sub ${AWS::StackName}-TG
        HealthCheckIntervalSeconds: 30
        HealthCheckProtocol: HTTP
        HealthCheckTimeoutSeconds: 15
        HealthyThresholdCount: 5
        Matcher:
          HttpCode: '200,302'
        UnhealthyThresholdCount: 3
        TargetGroupAttributes:
        - Key: deregistration_delay.timeout_seconds
          Value: '20'
        VpcId: !Ref VPC
        Port: 80
        Protocol: HTTP
        Targets:
        - Id: !Ref EC2Instance1
          Port: 80
        - Id: !Ref EC2Instance2
          Port: 80

  S3Bucket:                                   # Creaing S3 Bucket
    Type: AWS::S3::Bucket
    Description: Creating Amazon S3 bucket from CloudFormation
    Properties:
      BucketName: !Sub ${AWS::StackName}-${AWS::Region}-bucket
      VersioningConfiguration:
        Status: Enabled
      AccessControl: Private
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true

Outputs:                                      # Output Block
  VPC:                                        # VPC Details
    Description: VPC of the base network
    Value: !Ref VPC
    Export:
      Name: !Sub ${AWS::StackName}-VPC

  PublicSubnetA:                              # Public Subnet Details
    Description: First Public Subnet
    Value: !Ref PublicSubnetA
    Export:
      Name: !Sub ${AWS::StackName}-PublicSubnetA

  PublicSubnetB:                              # Public Subnet Details
    Description: Second Public Subnet
    Value: !Ref PublicSubnetB
    Export:
      Name: !Sub ${AWS::StackName}-PublicSubnetB

  PrivateSubnetA:                             # Private Subnet Details
    Description: First Private Subnet
    Value: !Ref PrivateSubnetA
    Export:
      Name: !Sub ${AWS::StackName}-PrivateSubnetA

  PrivateSubnetB:                             # Private Subnet Details
    Description: Second Private Subnet
    Value: !Ref PrivateSubnetB
    Export:
      Name: !Sub ${AWS::StackName}-PrivateSubnetB

  PublicIp1:                                  # Public IP 
    Description: EC2 Instance Public Ip
    Value: !GetAtt EC2Instance1.PublicIp

  PublicIp2:                                  # Public IP
    Description: EC2 Instance Public Ip
    Value: !GetAtt EC2Instance2.PublicIp

  ALBEndpoint:                                # ALB DNS Name
    Value: !GetAtt 'LoadBalancer.DNSName'
    Description: 'LoadBalancer DNS name'

  ALBName:                                    # ALB Name
    Value: !GetAtt 'LoadBalancer.LoadBalancerName'
    Description: 'Unique load balancer name'